<!DOCTYPE html>
<html lang="en"><head>
    <meta http-equiv="Content-Type" content="text/html; charset=windows-1252">
    <title>ADSK Web Analytics Foundation Cross-Domain Solution</title>
  </head>

  <body>
    <!-- see Alec Rothman for details -->

    <div>
      <h2><u>Web Analytics Foundation</u></h2>
      <h3><b>Analytics Domain Solution (WADS) ... DCOM based</b></h3>

      <script>
        function getCookie(t) {
          try {
            for (
              var e = t + "=", n = document.cookie.split(";"), r = 0;
              r < n.length;
              r++
            ) {
              for (var o = n[r]; " " == o.charAt(0); ) o = o.substring(1);
              if (-1 != o.indexOf(e)) {
                var i = o.substring(e.length, o.length);
                return i.indexOf("%3A") > -1 ? decodeURIComponent(i) : i;
              }
            }
            return !1;
          } catch (t) {
            return !1;
          }
        }
        function setCookie(e, t, o) {
          var i,
            n,
            s = document.location.host,
            a =
              s.indexOf(".autodesk.com") > -1
                ? "COM"
                : s.indexOf(".autodesk.net") > -1
                ? "NET"
                : "OTH";
          if ("COM" === a) i = ".autodesk.com";
          else if ("NET" === a) i = ".autodesk.net";
          else {
            if ("OTH" !== a) return;
            i = document.location.host;
          }
          if (o)
            if ("number" == typeof o) {
              var d = new Date();
              d.setTime(d.getTime() + 24 * o * 60 * 60 * 1e3),
                (n = "; expires=" + d.toGMTString());
            } else "string" == typeof o && (n = "; expires=" + o);
          else n = "";
          document.cookie =
            e +
            "=" +
            t +
            n +
            ";domain=" +
            i +
            "; SameSite=None; Secure; path=/";
        }
        function getParentUrl() {
          return parent !== window ? document.referrer : "not hosted in iFrame";
        }
        function gdprGuid() {
          var S4 = function () {
            return (((1 + Math.random()) * 0x10000) | 0)
              .toString(16)
              .substring(1);
          };
          return (
            S4() +
            S4() +
            "-" +
            S4() +
            "-" +
            S4() +
            "-" +
            S4() +
            "-" +
            S4() +
            S4() +
            S4()
          );
        }

        function adsInfo(event) {
          const domainArray = [
            ".autodesk.com",
            ".autodesk.com.cn",
            ".autodeskjournal.com",
            "autodeskjournal.triangulo-msc.com",
            ".circuits.io",
            ".digitalriver.com",
            ".flexsim.com",
            ".gcpay.com",
            ".gcpay.ca",
            ".gcs-web.com",
            ".instructables.com",
            ".payapps.com",
            ".tinkercad.com",
            "app.spacemakerai.eu",
            ".autodeskforma.com",
            ".autodeskforma.eu",
            "autodeskformit.com",
            "bim-design.com",
            ".bim-design.com",
            ".buildingconnected.com",
            ".findmyorder.com",
            ".innovyze.com",
            "innovyze.com",
            ".irisvr.com",
            "irisvr.com",
            ".keanw.com",
            "meshmixer.com",
            "www.moxion.io",
            "resources.moxion.io",
            ".netlify.app",
            ".plangrid.com",
            ".prodsmart.com",
            "prodsmart-alb.prdsmart-p-ew1.cloudos.autodesk.com",
            "proest.com",
            ".proest.com",
            ".rainfocus.com",
            ".shotgridsoftware.com",
            ".shotgunsoftware.com",
            ".softimage.com",
            "area.autodesk.jp",
            ".the-area.com",
            "thewild.com",
            ".thewild.com",
            "unifilabs.com",
            ".library.io",
            "wonderdynamics.com",
            ".wonderdynamics.com",
            "mpj.c41.myftpupload.com",
            "CONTAINS:.construction.autodesk.",
          ];

          // Source Url
          var postMessageSource = "";
          if (event && event.origin && event.origin !== "") {
            postMessageSource = event.origin;
          } else if (
            document &&
            document.referrer &&
            document.referrer !== ""
          ) {
            postMessageSource = document.referrer;
          }

          if (postMessageSource) {
            // Attempt to create a new URL object using the referrer
            const referrerURL = new URL(postMessageSource);
            var allowPostMessage = false;
            allowPostMessage = domainArray.some(function (domain) {
              if (domain.startsWith(".")) {
                // Check for valid subdomains (e.g., .irisvr.com matches www.irisvr.com but not hackirisvr.com)
                return (
                  referrerURL.hostname.endsWith(domain) &&
                  referrerURL.hostname !== domain.substring(1)
                );
              } else if (domain.startsWith("CONTAINS:")) {
                const baseDomain = domain
                  .replace("CONTAINS:", "")
                  .replace(/^\.+|\.+$/g, "");
                const regexDomain = new RegExp(
                  `^${baseDomain.replace(
                    /\./g,
                    "\\."
                  )}\\.[a-zA-Z]{2,}(\\.[a-zA-Z]{2,})?$`
                );
                return regexDomain.test(referrerURL.hostname);
              } else {
                // Check for exact matches (e.g., irisvr.com)
                return referrerURL.hostname === domain;
              }
            });
          } else {
            allowPostMessage = false;
          }

          if (!allowPostMessage) {
            return;
          }

          var command = event.data;

          if (command === "get-base-data") {
            var anonCookie = getCookie("OPTOUTMULTI_REF") || false,
              optCookie = getCookie("OPTOUTMULTI_TYPE") || false,
              optSelects = getCookie("OPTOUTMULTI") || false,
              optGeo = getCookie("OPTOUTMULTI_GEO") || false,
              optLength = getCookie("ADSK_GDPR_OPT_LENGTH") || false,
              codifiedAnon = anonCookie, // escape(anonCookie),
              codifiedOpt = optCookie, // escape(optCookie),
              codifiedSelects = optSelects, // escape(optSelects),
              codifiedLength = optLength, //escape(optLength);
              prevGpc = getCookie("gpc_prevGpc") || false,
              prevLoginStatus = getCookie("gpc_prevLoginStatus") || false,
              wasGpcEverOn = getCookie("gpc_wasGpcEverOn") || false,
              wasUserLoggedInBefore =
                getCookie("gpc_wasUserLoggedInBefore") || false;

            var userAnon = {
              "gdpr-base-data": {
                anon: codifiedAnon,
                "opt-in": codifiedOpt,
                "opt-selections": codifiedSelects,
                "opt-geo": optGeo,
                "opt-expiration": codifiedLength,
                prevGpc: prevGpc,
                prevLoginStatus: prevLoginStatus,
                wasGpcEverOn: wasGpcEverOn,
                wasUserLoggedInBefore: wasUserLoggedInBefore,
              },
            };

            // send the message...
            parent.postMessage(userAnon, "*");
          } else if (typeof command["set-gdpr-base-data"] !== "undefined") {
            // alert('received SET command in WADS for GDPR data = ' + JSON.stringify(command['set-gdpr-base-data']));

            var opts = command["set-gdpr-base-data"]["OPTOUTMULTI"],
              anonCook = command["set-gdpr-base-data"]["OPTOUTMULTI_REF"],
              optType = command["set-gdpr-base-data"]["OPTOUTMULTI_TYPE"],
              optStoreDuration =
                command["set-gdpr-base-data"]["OPTOUTMULTI_LENGTH"],
              locale =
                command["set-gdpr-base-data"]["OPTOUTMULTI_GEO"] || false,
              prevGpc = command["set-gdpr-base-data"]["gpc_prevGpc"],
              prevLoginStatus =
                command["set-gdpr-base-data"]["gpc_prevLoginStatus"],
              wasGpcEverOn = command["set-gdpr-base-data"]["gpc_wasGpcEverOn"],
              wasUserLoggedInBefore =
                command["set-gdpr-base-data"]["gpc_wasUserLoggedInBefore"];

            setCookie(
              "OPTOUTMULTI",
              encodeURIComponent("0:0|" + opts),
              optStoreDuration
            );
            setCookie("OPTOUTMULTI_REF", anonCook, 365 * 2);
            setCookie("OPTOUTMULTI_TYPE", optType, optStoreDuration);
            setCookie(
              "ADSK_GDPR_OPT_LENGTH",
              optStoreDuration,
              optStoreDuration
            );
            if (prevGpc) {
              setCookie("gpc_prevGpc", prevGpc, 365 * 2);
              setCookie("gpc_prevLoginStatus", prevLoginStatus, 365 * 2);
              setCookie("gpc_wasGpcEverOn", wasGpcEverOn, 365 * 2);
              setCookie(
                "gpc_wasUserLoggedInBefore",
                wasUserLoggedInBefore,
                365 * 2
              );
            }
            if (locale) setCookie("OPTOUTMULTI_GEO", locale);
          } else if (command === "get-ccpa-base-data") {
            var anonCookie = getCookie("adsk_ccpa_guid") || false,
              optSelects = getCookie("adsk_ccpa") || false,
              codifiedAnon = anonCookie, // escape(anonCookie),
              codifiedOpt = optSelects; // escape(optCookie)

            var ccpaAnon = {
              "ccpa-base-data": {
                anon: codifiedAnon,
                "opt-in": codifiedOpt,
              },
            };

            // send the message...
            parent.postMessage(ccpaAnon, "*");
          } else if (typeof command["set-ccpa-base-data"] !== "undefined") {
            var opts = command["set-ccpa-base-data"]["adsk_ccpa"],
              anonCook = command["set-ccpa-base-data"]["adsk_ccpa_guid"],
              ccpaOptInExpiry = 365 * 1.5;

            setCookie("adsk_ccpa", opts, ccpaOptInExpiry);
            setCookie("adsk_ccpa_guid", anonCook, ccpaOptInExpiry);
          } else if (command === "get-analytics-user-data") {
            var _gaCookie = getCookie("_ga"),
              _gidCookie = getCookie("_gid"),
              codifiedGa = _gaCookie, // escape(_gaCookie),
              codifiedGid = _gidCookie; // escape(_gidCookie);

            var userD = {
              "analytics-data": {
                user_ga: codifiedGa,
                user_gid: codifiedGid,
              },
            };

            // send the message...
            parent.postMessage(userD, "*");
          } else if (typeof command["set-analytics-data"] !== "undefined") {
            var _gaCookie = command["set-analytics-data"]["user_ga"],
              _gidCookie = command["set-analytics-data"]["user_gid"];

            // set the GA cookie on the MAIN DOMAIN
            setCookie("_ga", _gaCookie);
            setCookie("_gid", _gidCookie, 1);

            var checkSetGa = getCookie("_ga"),
              checkSetGid = getCookie("_gid");

            if (checkSetGa) {
              // communicate back a valid cookie set to put the breadcrumb in
              var gaSet = "google-cookie-set-on-wads";
              parent.postMessage(gaSet, "*");
            }
          }
          // Support for a TEALIUM-LESS check of OPT-IN DATA
          else if (command === "get-base-data-tealium-less") {
            // check for OPTOUTMULTI COOKIE
            var privacySettings = getCookie("OPTOUTMULTI") || false;
            // if it doesn't exist, send back NO DATA
            if (!privacySettings)
              parent.postMessage({ "tealiumless-no-gdpr-data": "true" }, "*");
            // otherwise, send back the values for consumption...
            else {
              var consentData = {
                "tealiumless-gdpr-base-data": {
                  selections: privacySettings,
                },
              };
              parent.postMessage(consentData, "*");
            }
          } else if (typeof command["set_data"] !== "undefined") {
            var cookieName = "";
            var cookieValue = "";
            var cookieDuration = 365 * 2;

            if (typeof command["set_data"]["cookie_name"] !== "undefined")
              cookieName = command["set_data"]["cookie_name"];

            if (typeof command["set_data"]["cookie_value"] !== "undefined")
              cookieValue = command["set_data"]["cookie_value"];

            if (typeof command["set_data"]["cookie_duration"] !== "undefined")
              cookieDuration = command["set_data"]["cookie_duration"];

            if (cookieName !== "")
              setCookie(cookieName, cookieValue, cookieDuration);
          } else if (typeof command["get_data"] !== "undefined") {
            var cookieName = "";
            var cookieValue = "";

            if (typeof command["get_data"]["cookie_name"] !== "undefined")
              cookieName = command["get_data"]["cookie_name"];

            if (cookieName !== "") {
              cookieValue = getCookie(cookieName);

              var results = {
                get_data_response: {
                  cookie_name: cookieName,
                  cookie_value: cookieValue,
                },
              };

              // send the message...
              parent.postMessage(results, "*");
            }
          }
        }

        if (window.addEventListener) {
          addEventListener("message", adsInfo, false);
        } else {
          attachEvent("onmessage", adsInfo);
        }

        try {
          // tell the main page that the FRAME is ready...
          parent.postMessage("ads-frame-ready", "*");
        } catch (err) {
          // error
        }
      </script>
    </div>
  

</body></html>